
create schema live_case;

use live_case;

create table gifts
(
donation_dt date,
amount FLOAT
)
;

LOAD DATA INFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/gift.csv'
INTO TABLE gifts 
FIELDS TERMINATED BY ',' 
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS
;

SHOW VARIABLES LIKE "secure_file_priv";

Select * from media;
Select * from donation;


-- 275 donation dates dont have media
Select * from
(
Select distinct don_date from v_don
)a
where don_date not in
(Select distinct media_date from v_media);



drop view if exists v_media;

create view v_media as
(
WITH cte1 as
(
Select *, 
case when (`Input Name` = 'SHH Broadcast Quality') and 
		  ((source in ('News Talk AM 1490','KSKA','Mississippi Public Broadcasting','The Mighty 790 (KFGO)','WWJ-AM')
          or regexp_like(source, "[:digit:]+[.]") or 
		  regexp_like(source, "\\bradio\\b")))
	 then 'radio'
     when (`Input Name` = 'SHH Broadcast Quality')
     then 'TV'
     when (`Input Name` = 'Second Harvest Heartland | News') and regexp_like(source,"financial")
     then 'financial_news'
     when (`Input Name` = 'Second Harvest Heartland | News') and regexp_like(source, "print")
     then 'news'
     else 'news'
     end as channel
from media order by 1
)
Select *, case channel
	 when 'radio' then 7
     when 'TV' then 7
     when 'financial_news' then 7
     when 'news' then 7
    -- when 'print' then 7
     end as md
from cte1
)
;

drop view if exists v_don;
create view v_don as
(
Select date(`date`) as don_date, amount from donation order by 1
)
;


-- Some dates don't have media but we'll still number channel_sno
drop view if exists anchor;
create view anchor as
(
Select a.*, b.channel, b.md,
		row_number() over (partition by channel order by don_date) as channel_sno,
        1 as x,
        CAST(md*100/md as FLOAT) as exp_imp
from v_don a
left join v_media b
on a.don_date = b.date
-- where a.don_date = (Select min(don_date) from v_don)
order by 3,5
);


-- Select distinct channel from v_rec;
Select 7*exp(-1);

drop view if exists v_rec;
create view v_rec as
(
with recursive cte_1 as
(
Select * from anchor
UNION ALL
Select a.don_date as don_date,
	   a.amount as amount,
       c.channel as channel,
       c.md as md,
       c.channel_sno as channel_sno,
       c.x+1 as x,
       case
       when channel = 'TV' then (c.md * exp(-x) *100) / c.md
       when channel = 'radio' then (c.md * exp(-1.5*x) *100) / c.md
       when (regexp_like(channel, 'news') or channel = 'print') then (c.md * exp(-0.5*x) *100) / c.md
       else NULL
       end as expimp
       from v_don a
       join cte_1 as c
       on ADDDATE(c.don_date, INTERVAL 1 DAY) = a.don_date
       where c.x < c.md
)
Select *,
		sum(exp_imp) over (partition by don_date) as impact_date
        from cte_1 
        where exp_imp is not null
UNION ALL
Select *, 0 as impact_date from 
cte_1 where exp_imp is null
order by 1,3,5
)
;


create view v_rec as
(
with recursive cte_1 as
(
Select * from anchor
UNION ALL
Select a.don_date as don_date,
	   a.amount as amount,
       c.channel as channel,
       c.md as md,
       c.channel_sno as channel_sno,
       c.impact-1 as impact
       from v_don a
       join cte_1 as c
       on ADDDATE(c.don_date, INTERVAL 1 DAY) = a.don_date
       where c.impact-1 > 0
)
Select *,
		sum(impact) over (partition by don_date) as impact_date
        from cte_1 
        where impact is not null
UNION ALL
Select *, 0 as impact_date from 
cte_1 where impact is null
order by 1,3,5
)
;


drop view if exists media_level;
create view media_level as
(
Select a.*, b.*,
		row_number() over (partition by channel order by don_date) as channel_sno
from v_don a
left join v_media b
on a.don_date = b.date
order by 3,5
);


drop view if exists v_media_w_don;
create view v_media_w_don as
(
with cte_temp3 as
(
Select b.*, a.don_per_media from
(
	Select channel, channel_sno, sum(impact_row) as don_per_media from
		(
		Select *, amount*(exp_imp/impact_date) as impact_row from v_rec
		) d
	group by 1,2
)a 
join media_level b
on a.channel = b.channel
and a.channel_sno = b.channel_sno
)
Select Date, Headline, URL, `Hit Sentence`, Source, Influencer, Country, Reach,
 `Desktop Reach`, `Mobile Reach`, `Twitter Social Echo`, `Facebook Social Echo`,
 `Reddit Social Echo`, AVE, Sentiment, `Key Phrases`, `Input Name`, Time, State, City,
 `Media Duration`, `Media End`, channel, channel_sno, don_per_media
 from cte_temp3
-- adding god impact (no media donations)
UNION
Select don_date as Date,
NULL AS Headline, 
NULL AS URL, 
NULL AS `Hit Sentence`, 
NULL AS Source, 
NULL AS Influencer, 
NULL AS Country, 
NULL AS Reach, 
NULL AS `Desktop Reach`, 
NULL AS `Mobile Reach`, 
NULL AS `Twitter Social Echo`, 
NULL AS `Facebook Social Echo`, 
NULL AS `Reddit Social Echo`, 
NULL AS `AVE`, 
NULL AS `Sentiment`, 
NULL AS `Key Phrases`, 
'god' as `Input Name`, 
NULL AS `Time`, 
NULL AS `State`, 
NULL AS `City`, 
NULL AS `Media Duration`, 
NULL AS `Media End`, 
'god' as channel, 
channel_sno, 
amount as don_per_media
from
(
	Select * from
	(
	Select *, count(*) over(partition by don_date) as cnt from
	v_rec
	)a
	where cnt = 1 and exp_imp is null
)b
)
;

Select * from v_media_w_don
;

Select sum(don_per_media) from v_media_w_don;
Select sum(amount) from donation;

/*
------- 
drop table if exists calender;
create table calender
(
campaign_date date,
campaign_flag bool,
holiday_flag bool
)
;
*/

-- joining

with cte1 as
(
Select a.*, coalesce(b.iscampaign , 0) as iscampaign, coalesce(b.isholiday, 0) as isholiday
from v_media_w_don a 
left join calender b
on a.date = b.calender_date
), cte2 as
(
-- december month flag
Select *, case when month(date) = 12
		  then 1 else 0
          end as isdecember
from cte1
)
Select * from cte2
;








/*
---- QC
----

Select * from v_media where media_date = '2021-04-02';
sELECT * FROM v_don where don_date = '2021-04-02';


Select *, amount*(impact/impact_date) as impact_row from v_rec
WHERE DON_DATE BETWEEN '2021-04-02' and  '2021-04-05';

Select *, amount*(impact/impact_date) as impact_row from v_rec
WHERE DON_DATE BETWEEN '2021-06-23' and  '2021-06-25';

Select * from
(
Select *, count(*) over(partition by don_date) as cnt from
v_rec
)a
where cnt = 1 and impact is null;

Select * from v_rec WHERE DON_DATE = '2021-04-05';

Select sum(amount) from
(
Select distinct don_date, amount from v_rec
)a;

Select * from v_rec;

-- '525096.16'

-- '63737412.617148414'
Select sum(don_per_media) as day_sum from v_media_w_don;

Select *  from v_media_w_don;

-- '64262509.61999995'
Select sum(amount) from donation;
;

Select 64262509.61999995 - 63737412.617148414;

-- Some days, there were donations without any media impact


Select sum(don_per_media) from
(
	Select channel, channel_sno, sum(impact_row) as don_per_media from
		(
		Select *, amount*(impact/impact_date) as impact_row from v_rec
		) d
	group by 1,2
)a
;

Select sum(amount) from
(
Select distinct don_date, amount from anchor
)a;

Select * from donation;

Select sum(impact_row) from
(
Select *, amount*(impact/impact_date) as impact_row from v_rec
)a
;

Select sum(amount) from donation;

Select sum(impact_row) from
(
Select *, amount*(impact/impact_date) as impact_row from v_rec -- where don_date = '2020-05-01'
)a
;


/*
